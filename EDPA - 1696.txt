#include <stdio.h>
#include <stdlib.h>

/*
typedef struct tree
{
  int num;
  struct tree* dir;
  struct tree* esq;
} Tree;
*/

/*
Tree* createTree()
{
  return NULL;
}
*/

/*Função principal*/

int main(){
    char p1[] = "sanches";
    char p2[] = "rusa";
    printf("player 1: %s \n", p1);
    printf("player 2: %s \n", p2);

    char *vetor;
    char *novo_vetor;
    char *vetor_de_zeros;
    int t, n, q;
    int indice;
    int valor;
    int i;

    printf("Quantos testes voce deseja fazer? ");
    scanf("%d", &t);
    printf("Nesta execucao serao realizados %d testes \n", t);

    for(i=0;i<t;i++){
        printf("\nTeste numero %d\n", i+1);
        printf("Entre com os parametros N (tamanho do vetor) e Q (numero de substituicoes): ");
        scanf("%d %d",&n, &q);
        printf("O tamanho do vetor sera %d.\n", n);
        printf("Tambem serao feitas %d substituicoes.\n", q);

        vetor = (char *)malloc(n);
        vetor_de_zeros = (char *)malloc(n-1);

        printf("Entre com o vetor de teste: ");
        scanf("%s", vetor);
        printf("/nVetor adicionado: %s", vetor);
        /*Chamar fun��o para preencher �rvore, solucionar e imprimir resposta*/

        if(q>0){
          for(i=0;i<q;i++){
            printf("\nSubstituicao de numero %d", i+1);
            printf("\nEntre com o indice a ser substituido no vetor e o valor que quer substituir: ");
            scanf("%d %d", &indice, &valor);
            printf("Substituiremos o valor do indice %d por %d", indice-1, valor);
            printf("vetor original: %s", vetor);

          }
        }
    }

    /*#defini��o de nome dos jogadores*/

    /*#ler primeira linha
    num_testes = quantidade de testes

    for(i=0;i<num_testes;i++){
        iniciar_testes(p1,p2)

        #invers�o de nome de jogadores a cada rodada
        swap = p1
        p1 = p2
        p2 = swap
    }
    */
    return 0;
    return 0;
}
